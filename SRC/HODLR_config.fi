#ifdef DAT
#if DAT==0
 
#define DT complex(kind=8)
#define MPI_DT MPI_DOUBLE_COMPLEX
#define CBIND_DT complex(kind=C_DOUBLE_COMPLEX)
#define C_DT doublecomplex
#define flops_gemm flops_zgemm
#define gemmf77 zgemm
 
#define butterfly_compress z_butterfly_compress
#define decomposition_UkerlV z_decomposition_UkerlV
#define butterfly_recomposition_FastSampling_initial z_butterfly_recomposition_FastSampling_initial
#define butterfly_recomposition_FastSampling z_butterfly_recomposition_FastSampling
#define Bplus_compress_N15 z_Bplus_compress_N15
#define Butterfly_compress_N15_withoutBoundary z_Butterfly_compress_N15_withoutBoundary
#define Butterfly_compress_N15 z_Butterfly_compress_N15
#define BlockLR z_BlockLR
#define ACA_CompressionForward z_ACA_CompressionForward
#define BatchACA_CompressionForward z_BatchACA_CompressionForward
#define SeudoSkeleton_CompressionForward z_SeudoSkeleton_CompressionForward
#define LocalButterflySVD_Left z_LocalButterflySVD_Left
#define LocalButterflySVD_Right z_LocalButterflySVD_Right
#define CheckLRError z_CheckLRError
#define Bplus_inverse_schur_partitionedinverse z_Bplus_inverse_schur_partitionedinverse
#define BF_inverse_schur_partitionedinverse z_BF_inverse_schur_partitionedinverse
#define LR_minusBC z_LR_minusBC
#define BF_inverse_schulziteration_IplusButter z_BF_inverse_schulziteration_IplusButter
#define compute_schulz_init z_compute_schulz_init
#define MultiL_inverse_schur_partitionedinverse z_MultiL_inverse_schur_partitionedinverse
#define Extract_partial_Bplus z_Extract_partial_Bplus
#define BF_inverse_partitionedinverse_IplusButter z_BF_inverse_partitionedinverse_IplusButter
#define BF_split z_BF_split
#define get_minmaxrank_ABCD z_get_minmaxrank_ABCD
#define LR_SMW z_LR_SMW
#define BF_block_MVP_inverse_dat z_BF_block_MVP_inverse_dat
#define BF_Delete_RandVect z_BF_Delete_RandVect
#define BF_Init_RandVect_Empty z_BF_Init_RandVect_Empty
#define BF_Init_randomized z_BF_Init_randomized
#define BF_Resolving_Butterfly_LL_new z_BF_Resolving_Butterfly_LL_new
#define BF_OneV_LL z_BF_OneV_LL
#define BF_OneKernel_LL z_BF_OneKernel_LL
#define BF_Resolving_Butterfly_RR_new z_BF_Resolving_Butterfly_RR_new
#define BF_OneU_RR z_BF_OneU_RR
#define BF_OneKernel_RR z_BF_OneKernel_RR
#define BF_randomized z_BF_randomized
#define BF_Reconstruction_LL z_BF_Reconstruction_LL
#define BF_Reconstruction_RR z_BF_Reconstruction_RR
#define BF_Test_Reconstruction_Error z_BF_Test_Reconstruction_Error
#define BF_Randomized_Vectors_LL z_BF_Randomized_Vectors_LL
#define BF_Randomized_Vectors_RR z_BF_Randomized_Vectors_RR
#define BF_block_MVP_inverse_ABCD_dat z_BF_block_MVP_inverse_ABCD_dat
#define BF_block_MVP_inverse_A_minusBDinvC_dat z_BF_block_MVP_inverse_A_minusBDinvC_dat
#define BF_block_MVP_inverse_minusBC_dat z_BF_block_MVP_inverse_minusBC_dat
#define BF_block_MVP_schulz_dat z_BF_block_MVP_schulz_dat
#define BF_block_MVP_schulz_Xn_dat z_BF_block_MVP_schulz_Xn_dat
#define BF_block_MVP_Sblock_dat z_BF_block_MVP_Sblock_dat
#define Bplus_block_MVP_Exact_dat z_Bplus_block_MVP_Exact_dat
#define Bplus_block_MVP_Outter_Exact_dat z_Bplus_block_MVP_Outter_Exact_dat
#define Bplus_block_MVP_minusBC_dat z_Bplus_block_MVP_minusBC_dat
#define Bplus_block_MVP_Outter_minusBC_dat z_Bplus_block_MVP_Outter_minusBC_dat
#define Bplus_block_MVP_Sblock_dat z_Bplus_block_MVP_Sblock_dat
#define Bplus_block_MVP_Outter_Sblock_dat z_Bplus_block_MVP_Outter_Sblock_dat
#define Bplus_block_MVP_inverse_dat z_Bplus_block_MVP_inverse_dat
#define Bplus_block_MVP_twoforward_dat z_Bplus_block_MVP_twoforward_dat
#define Bplus_block_MVP_BplusB_dat z_Bplus_block_MVP_BplusB_dat
#define Bplus_block_MVP_BBplus_dat z_Bplus_block_MVP_BBplus_dat
#define Bplus_MultiLrandomized_Onesubblock z_Bplus_MultiLrandomized_Onesubblock
#define Bplus_randomized_constr z_Bplus_randomized_constr
#define Bplus_Init_FromInput z_Bplus_Init_FromInput
#define Bplus_Sblock_randomized_memfree z_Bplus_Sblock_randomized_memfree
#define LR_Sblock z_LR_Sblock
#define gesvd_robust z_gesvd_robust
#define gesvdf90 z_gesvdf90
#define zgesvdf90 z_zgesvdf90
#define dgesvdf90 z_dgesvdf90
#define gesddf90 z_gesddf90
#define zgesddf90 z_zgesddf90
#define dgesddf90 z_dgesddf90
#define geqrff90 z_geqrff90
#define zgeqrff90 z_zgeqrff90
#define dgeqrff90 z_dgeqrff90
#define geqp3f90 z_geqp3f90
#define zgeqp3f90 z_zgeqp3f90
#define dgeqp3f90 z_dgeqp3f90
#define geqp3modf90 z_geqp3modf90
#define dgeqp3modf90 z_dgeqp3modf90
#define zgeqp3modf90 z_zgeqp3modf90
#define ormqrf90 z_ormqrf90
#define unmqrf90 z_unmqrf90
#define un_or_gqrf90 z_un_or_gqrf90
#define orgqrf90 z_orgqrf90
#define ungqrf90 z_ungqrf90
#define getrff90 z_getrff90
#define dgetrff90 z_dgetrff90
#define zgetrff90 z_zgetrff90
#define getrsf90 z_getrsf90
#define dgetrsf90 z_dgetrsf90
#define zgetrsf90 z_zgetrsf90
#define getrif90 z_getrif90
#define dgetrif90 z_dgetrif90
#define zgetrif90 z_zgetrif90
#define trsmf90 z_trsmf90
#define dtrsmf90 z_dtrsmf90
#define ztrsmf90 z_ztrsmf90
#define gemmf90 z_gemmf90
#define dgemmf90 z_dgemmf90
#define zgemmf90 z_zgemmf90
#define pun_or_mqrf90 z_pun_or_mqrf90
#define pdormqrf90 z_pdormqrf90
#define pzunmqrf90 z_pzunmqrf90
#define pgeqpfmodf90 z_pgeqpfmodf90
#define pzgeqpfmodf90 z_pzgeqpfmodf90
#define pdgeqpfmodf90 z_pdgeqpfmodf90
#define pgemr2df90 z_pgemr2df90
#define pgemmf90 z_pgemmf90
#define ptrsmf90 z_ptrsmf90
#define pgetrff90 z_pgetrff90
#define pgetrif90 z_pgetrif90
#define pdgetrif90 z_pdgetrif90
#define pzgetrif90 z_pzgetrif90
#define pgesvdf90 z_pgesvdf90
#define pdgesvdf90 z_pdgesvdf90
#define pzgesvdf90 z_pzgesvdf90
#define element_Zmn_user z_element_Zmn_user
#define HODLR_construction z_HODLR_construction
#define full_construction z_full_construction
#define BF_compress_test z_BF_compress_test
#define HOBF_MVP_blk z_HOBF_MVP_blk
#define BF_MVP_blk z_BF_MVP_blk
#define Z_elem z_Z_elem
#define F_Z_elem z_F_Z_elem
#define C_Z_elem z_C_Z_elem
#define HODLR_Factorization z_HODLR_Factorization
#define HODLR_randomized z_HODLR_randomized
#define HODLR_MVP_randomized_OneL_Lowrank z_HODLR_MVP_randomized_OneL_Lowrank
#define HODLR_MVP_randomized_OneL z_HODLR_MVP_randomized_OneL
#define HODLR_randomized_OneL_Fullmat z_HODLR_randomized_OneL_Fullmat
#define HODLR_Reconstruction_LL z_HODLR_Reconstruction_LL
#define HODLR_Reconstruction_RR z_HODLR_Reconstruction_RR
#define HODLR_Test_Error_RR z_HODLR_Test_Error_RR
#define HODLR_MVP_randomized_Fullmat z_HODLR_MVP_randomized_Fullmat
#define HODLR_Randomized_Vectors_LL z_HODLR_Randomized_Vectors_LL
#define HODLR_Randomized_Vectors_RR z_HODLR_Randomized_Vectors_RR
#define HODLR_Solution z_HODLR_Solution
#define HODLR_Ztfqmr z_HODLR_Ztfqmr
#define HODLR_ApplyPrecon z_HODLR_ApplyPrecon
#define HODLR_Test_Solve_error z_HODLR_Test_Solve_error
#define MVM_Z_factorized z_MVM_Z_factorized
#define MVM_Z_forward z_MVM_Z_forward
#define HODLR_structuring z_HODLR_structuring
#define BPlus_structuring z_BPlus_structuring
#define delete_blocks z_delete_blocks
#define delete_Bplus z_delete_Bplus
#define copy_butterfly z_copy_butterfly
#define copy_delete_butterfly z_copy_delete_butterfly
#define ComputeMemory_butterfly z_ComputeMemory_butterfly
#define copy_Bplus z_copy_Bplus
#define copy_delete_Bplus z_copy_delete_Bplus
#define ComputeMemory_Bplus z_ComputeMemory_Bplus
#define copy_HOBF z_copy_HOBF
#define print_butterfly_size_rank z_print_butterfly_size_rank
#define Extract_partial_butterfly z_Extract_partial_butterfly
#define Copy_butterfly_partial z_Copy_butterfly_partial
#define Butterfly_Partial_MVP_Half z_Butterfly_Partial_MVP_Half
#define BF_block_MVP_dat z_BF_block_MVP_dat
#define Bplus_block_MVP_dat z_Bplus_block_MVP_dat
#define ComputeRandVectIndexArray z_ComputeRandVectIndexArray
#define CountMaxIntermidiateVector z_CountMaxIntermidiateVector
#define CountIndexArrayShape z_CountIndexArrayShape
#define Butterfly_value z_Butterfly_value
#define fullmat_block_MVP_dat z_fullmat_block_MVP_dat
#define get_butterfly_minmaxrank z_get_butterfly_minmaxrank
#define Butterfly_sym2asym z_Butterfly_sym2asym
#define Butterfly_MoveSingulartoLeft z_Butterfly_MoveSingulartoLeft
#define Butterfly_MoveSingulartoRight z_Butterfly_MoveSingulartoRight
#define InitStat z_InitStat
#define PrintStat z_PrintStat
#define SetDefaultOptions z_SetDefaultOptions
#define ComputeParallelIndices z_ComputeParallelIndices
#define DoubleDistributeBplus z_DoubleDistributeBplus
#define element_Zmn_user_C z_element_Zmn_user_C
#define C_HODLR_Createptree z_C_HODLR_Createptree
#define C_HODLR_Createstats z_C_HODLR_Createstats
#define C_HODLR_Printstats z_C_HODLR_Printstats
#define C_HODLR_Createoption z_C_HODLR_Createoption
#define C_HODLR_Setoption z_C_HODLR_Setoption
#define C_HODLR_Construct z_C_HODLR_Construct
#define C_HODLR_Factor z_C_HODLR_Factor
#define C_HODLR_Solve z_C_HODLR_Solve
#define C_HODLR_Mult z_C_HODLR_Mult
#define linspaceI z_linspaceI
#define gemm_omp z_gemm_omp
#define gemmHN_omp z_gemmHN_omp
#define gemmNH_omp z_gemmNH_omp
#define gemmTN_omp z_gemmTN_omp
#define gemmNT_omp z_gemmNT_omp
#define copymatN z_copymatN
#define copymatT z_copymatT
#define LR_ReCompression z_LR_ReCompression
#define LR_Fnorm z_LR_Fnorm
#define GetRank z_GetRank
#define ComputeRange z_ComputeRange
#define CheckRandomizedLR z_CheckRandomizedLR
#define rperm z_rperm
#define init_random_seed z_init_random_seed
#define random_dp_number z_random_dp_number
#define assert z_assert
#define cscalar z_cscalar
#define scalar z_scalar
#define curl z_curl
#define ccurl z_ccurl
#define LeastSquare z_LeastSquare
#define GeneralInverse z_GeneralInverse
#define RandomizedSVD z_RandomizedSVD
#define RandomMat z_RandomMat
#define ACA_SubsetSelection z_ACA_SubsetSelection
#define ACA_CompressionFull z_ACA_CompressionFull
#define SVD_Truncate z_SVD_Truncate
#define PIKSRT_DBLE_Multi z_PIKSRT_DBLE_Multi
#define Cart2Sph z_Cart2Sph
#define CreateLeaf_Natural z_CreateLeaf_Natural
#define NumberingPtree z_NumberingPtree
#define CreatePtree z_CreatePtree
#define CreateNewGrid z_CreateNewGrid
#define Redistribute1Dto1D z_Redistribute1Dto1D
#define g2l z_g2l
#define l2g z_l2g
#define rank_approximate_func z_rank_approximate_func
#define fnorm z_fnorm
#define dlangef90 z_dlangef90
#define zlangef90 z_zlangef90
#define flops_zgesdd z_flops_zgesdd
#define flops_dgesdd z_flops_dgesdd
#define flops_zgesvd z_flops_zgesvd
#define flops_dgesvd z_flops_dgesvd
#define flops_dgeqpfmod z_flops_dgeqpfmod
#define flops_zgeqpfmod z_flops_zgeqpfmod
#define fmuls_geqrf z_fmuls_geqrf
#define fadds_geqrf z_fadds_geqrf
#define flops_zgeqrf z_flops_zgeqrf
#define flops_dgeqrf z_flops_dgeqrf
#define fmuls_ungqr z_fmuls_ungqr
#define fadds_ungqr z_fadds_ungqr
#define flops_zungqr z_flops_zungqr
#define flops_dungqr z_flops_dungqr
#define fmuls_unmqr z_fmuls_unmqr
#define fadds_unmqr z_fadds_unmqr
#define flops_zunmqr z_flops_zunmqr
#define flops_dunmqr z_flops_dunmqr
#define fmuls_getrf z_fmuls_getrf
#define fadds_getrf z_fadds_getrf
#define flops_zgetrf z_flops_zgetrf
#define flops_dgetrf z_flops_dgetrf
#define fmuls_getrs z_fmuls_getrs
#define fadds_getrs z_fadds_getrs
#define flops_zgetrs z_flops_zgetrs
#define flops_dgetrs z_flops_dgetrs
#define fmuls_getri z_fmuls_getri
#define fadds_getri z_fadds_getri
#define flops_zgetri z_flops_zgetri
#define flops_dgetri z_flops_dgetri
#define fmuls_trsm z_fmuls_trsm
#define fadds_trsm z_fadds_trsm
#define flops_ztrsm z_flops_ztrsm
#define flops_dtrsm z_flops_dtrsm
#define fmuls_gemm z_fmuls_gemm
#define fadds_gemm z_fadds_gemm
#define flops_zgemm z_flops_zgemm
#define flops_dgemm z_flops_dgemm
#define group_dist z_group_dist
#define near_or_far z_near_or_far
#define func_distance z_func_distance
#define CheckNAN_butterfly z_CheckNAN_butterfly
#define CheckNAN_Bplus z_CheckNAN_Bplus
#define fnorm z_fnorm
#define lcg z_lcg
#define c8_normal_01 z_c8_normal_01
#define r8_normal_01 z_r8_normal_01
#define r8_uniform_01 z_r8_uniform_01
#define floor_safe z_floor_safe
#define ceiling_safe z_ceiling_safe
#define INT_safe z_INT_safe
#define norm_vector z_norm_vector
#define Hankel02_Func z_Hankel02_Func
#define BesselJ0_func z_BesselJ0_func
#define BesselY0_func z_BesselY0_func
#define GetTreelevel z_GetTreelevel
#define IOwnPgrp z_IOwnPgrp
#define lcm z_lcm
#define gcd z_gcd
#define grid z_grid
#define procgroup z_procgroup
#define proctree z_proctree
#define commquant1D z_commquant1D
#define basisgroup z_basisgroup
#define vectorsblock z_vectorsblock
#define vectorset z_vectorset
#define butterflymatrix z_butterflymatrix
#define butterfly_col_select z_butterfly_col_select
#define butterfly_Kerl z_butterfly_Kerl
#define butterfly_UV z_butterfly_UV
#define matrixblock z_matrixblock
#define onelplus z_onelplus
#define blockplus z_blockplus
#define schulz_operand z_schulz_operand
#define cascadingfactors z_cascadingfactors
#define hobf z_hobf
#define partitionedblocks z_partitionedblocks
#define RandomBlock z_RandomBlock
#define Hoption z_Hoption
#define Hstat z_Hstat
#define mesh z_mesh
#define kernelquant z_kernelquant
#define Bplus_compress z_Bplus_compress
#define Bplus_inversion z_Bplus_inversion
#define Bplus_randomized z_Bplus_randomized
#define Bplus_update z_Bplus_update
#define DenseLA z_DenseLA
#define HODLR_constr z_HODLR_constr
#define HODLR_DEFS z_HODLR_DEFS
#define HODLR_factor z_HODLR_factor
#define HODLR_randomMVP z_HODLR_randomMVP
#define HODLR_Solve_Mul z_HODLR_Solve_Mul
#define HODLR_structure z_HODLR_structure
#define HODLR_Utilities z_HODLR_Utilities
#define HODLR_wrapper z_HODLR_wrapper
#define misc z_misc
 
#elif DAT==1
 
#define DT real(kind=8)
#define MPI_DT MPI_DOUBLE_PRECISION
#define CBIND_DT real(kind=C_DOUBLE)
#define C_DT double
#define flops_gemm flops_dgemm
#define gemmf77 dgemm
 
#define butterfly_compress d_butterfly_compress
#define decomposition_UkerlV d_decomposition_UkerlV
#define butterfly_recomposition_FastSampling_initial d_butterfly_recomposition_FastSampling_initial
#define butterfly_recomposition_FastSampling d_butterfly_recomposition_FastSampling
#define Bplus_compress_N15 d_Bplus_compress_N15
#define Butterfly_compress_N15_withoutBoundary d_Butterfly_compress_N15_withoutBoundary
#define Butterfly_compress_N15 d_Butterfly_compress_N15
#define BlockLR d_BlockLR
#define ACA_CompressionForward d_ACA_CompressionForward
#define BatchACA_CompressionForward d_BatchACA_CompressionForward
#define SeudoSkeleton_CompressionForward d_SeudoSkeleton_CompressionForward
#define LocalButterflySVD_Left d_LocalButterflySVD_Left
#define LocalButterflySVD_Right d_LocalButterflySVD_Right
#define CheckLRError d_CheckLRError
#define Bplus_inverse_schur_partitionedinverse d_Bplus_inverse_schur_partitionedinverse
#define BF_inverse_schur_partitionedinverse d_BF_inverse_schur_partitionedinverse
#define LR_minusBC d_LR_minusBC
#define BF_inverse_schulziteration_IplusButter d_BF_inverse_schulziteration_IplusButter
#define compute_schulz_init d_compute_schulz_init
#define MultiL_inverse_schur_partitionedinverse d_MultiL_inverse_schur_partitionedinverse
#define Extract_partial_Bplus d_Extract_partial_Bplus
#define BF_inverse_partitionedinverse_IplusButter d_BF_inverse_partitionedinverse_IplusButter
#define BF_split d_BF_split
#define get_minmaxrank_ABCD d_get_minmaxrank_ABCD
#define LR_SMW d_LR_SMW
#define BF_block_MVP_inverse_dat d_BF_block_MVP_inverse_dat
#define BF_Delete_RandVect d_BF_Delete_RandVect
#define BF_Init_RandVect_Empty d_BF_Init_RandVect_Empty
#define BF_Init_randomized d_BF_Init_randomized
#define BF_Resolving_Butterfly_LL_new d_BF_Resolving_Butterfly_LL_new
#define BF_OneV_LL d_BF_OneV_LL
#define BF_OneKernel_LL d_BF_OneKernel_LL
#define BF_Resolving_Butterfly_RR_new d_BF_Resolving_Butterfly_RR_new
#define BF_OneU_RR d_BF_OneU_RR
#define BF_OneKernel_RR d_BF_OneKernel_RR
#define BF_randomized d_BF_randomized
#define BF_Reconstruction_LL d_BF_Reconstruction_LL
#define BF_Reconstruction_RR d_BF_Reconstruction_RR
#define BF_Test_Reconstruction_Error d_BF_Test_Reconstruction_Error
#define BF_Randomized_Vectors_LL d_BF_Randomized_Vectors_LL
#define BF_Randomized_Vectors_RR d_BF_Randomized_Vectors_RR
#define BF_block_MVP_inverse_ABCD_dat d_BF_block_MVP_inverse_ABCD_dat
#define BF_block_MVP_inverse_A_minusBDinvC_dat d_BF_block_MVP_inverse_A_minusBDinvC_dat
#define BF_block_MVP_inverse_minusBC_dat d_BF_block_MVP_inverse_minusBC_dat
#define BF_block_MVP_schulz_dat d_BF_block_MVP_schulz_dat
#define BF_block_MVP_schulz_Xn_dat d_BF_block_MVP_schulz_Xn_dat
#define BF_block_MVP_Sblock_dat d_BF_block_MVP_Sblock_dat
#define Bplus_block_MVP_Exact_dat d_Bplus_block_MVP_Exact_dat
#define Bplus_block_MVP_Outter_Exact_dat d_Bplus_block_MVP_Outter_Exact_dat
#define Bplus_block_MVP_minusBC_dat d_Bplus_block_MVP_minusBC_dat
#define Bplus_block_MVP_Outter_minusBC_dat d_Bplus_block_MVP_Outter_minusBC_dat
#define Bplus_block_MVP_Sblock_dat d_Bplus_block_MVP_Sblock_dat
#define Bplus_block_MVP_Outter_Sblock_dat d_Bplus_block_MVP_Outter_Sblock_dat
#define Bplus_block_MVP_inverse_dat d_Bplus_block_MVP_inverse_dat
#define Bplus_block_MVP_twoforward_dat d_Bplus_block_MVP_twoforward_dat
#define Bplus_block_MVP_BplusB_dat d_Bplus_block_MVP_BplusB_dat
#define Bplus_block_MVP_BBplus_dat d_Bplus_block_MVP_BBplus_dat
#define Bplus_MultiLrandomized_Onesubblock d_Bplus_MultiLrandomized_Onesubblock
#define Bplus_randomized_constr d_Bplus_randomized_constr
#define Bplus_Init_FromInput d_Bplus_Init_FromInput
#define Bplus_Sblock_randomized_memfree d_Bplus_Sblock_randomized_memfree
#define LR_Sblock d_LR_Sblock
#define gesvd_robust d_gesvd_robust
#define gesvdf90 d_gesvdf90
#define zgesvdf90 d_zgesvdf90
#define dgesvdf90 d_dgesvdf90
#define gesddf90 d_gesddf90
#define zgesddf90 d_zgesddf90
#define dgesddf90 d_dgesddf90
#define geqrff90 d_geqrff90
#define zgeqrff90 d_zgeqrff90
#define dgeqrff90 d_dgeqrff90
#define geqp3f90 d_geqp3f90
#define zgeqp3f90 d_zgeqp3f90
#define dgeqp3f90 d_dgeqp3f90
#define geqp3modf90 d_geqp3modf90
#define dgeqp3modf90 d_dgeqp3modf90
#define zgeqp3modf90 d_zgeqp3modf90
#define ormqrf90 d_ormqrf90
#define unmqrf90 d_unmqrf90
#define un_or_gqrf90 d_un_or_gqrf90
#define orgqrf90 d_orgqrf90
#define ungqrf90 d_ungqrf90
#define getrff90 d_getrff90
#define dgetrff90 d_dgetrff90
#define zgetrff90 d_zgetrff90
#define getrsf90 d_getrsf90
#define dgetrsf90 d_dgetrsf90
#define zgetrsf90 d_zgetrsf90
#define getrif90 d_getrif90
#define dgetrif90 d_dgetrif90
#define zgetrif90 d_zgetrif90
#define trsmf90 d_trsmf90
#define dtrsmf90 d_dtrsmf90
#define ztrsmf90 d_ztrsmf90
#define gemmf90 d_gemmf90
#define dgemmf90 d_dgemmf90
#define zgemmf90 d_zgemmf90
#define pun_or_mqrf90 d_pun_or_mqrf90
#define pdormqrf90 d_pdormqrf90
#define pzunmqrf90 d_pzunmqrf90
#define pgeqpfmodf90 d_pgeqpfmodf90
#define pzgeqpfmodf90 d_pzgeqpfmodf90
#define pdgeqpfmodf90 d_pdgeqpfmodf90
#define pgemr2df90 d_pgemr2df90
#define pgemmf90 d_pgemmf90
#define ptrsmf90 d_ptrsmf90
#define pgetrff90 d_pgetrff90
#define pgetrif90 d_pgetrif90
#define pdgetrif90 d_pdgetrif90
#define pzgetrif90 d_pzgetrif90
#define pgesvdf90 d_pgesvdf90
#define pdgesvdf90 d_pdgesvdf90
#define pzgesvdf90 d_pzgesvdf90
#define element_Zmn_user d_element_Zmn_user
#define HODLR_construction d_HODLR_construction
#define full_construction d_full_construction
#define BF_compress_test d_BF_compress_test
#define HOBF_MVP_blk d_HOBF_MVP_blk
#define BF_MVP_blk d_BF_MVP_blk
#define Z_elem d_Z_elem
#define F_Z_elem d_F_Z_elem
#define C_Z_elem d_C_Z_elem
#define HODLR_Factorization d_HODLR_Factorization
#define HODLR_randomized d_HODLR_randomized
#define HODLR_MVP_randomized_OneL_Lowrank d_HODLR_MVP_randomized_OneL_Lowrank
#define HODLR_MVP_randomized_OneL d_HODLR_MVP_randomized_OneL
#define HODLR_randomized_OneL_Fullmat d_HODLR_randomized_OneL_Fullmat
#define HODLR_Reconstruction_LL d_HODLR_Reconstruction_LL
#define HODLR_Reconstruction_RR d_HODLR_Reconstruction_RR
#define HODLR_Test_Error_RR d_HODLR_Test_Error_RR
#define HODLR_MVP_randomized_Fullmat d_HODLR_MVP_randomized_Fullmat
#define HODLR_Randomized_Vectors_LL d_HODLR_Randomized_Vectors_LL
#define HODLR_Randomized_Vectors_RR d_HODLR_Randomized_Vectors_RR
#define HODLR_Solution d_HODLR_Solution
#define HODLR_Ztfqmr d_HODLR_Ztfqmr
#define HODLR_ApplyPrecon d_HODLR_ApplyPrecon
#define HODLR_Test_Solve_error d_HODLR_Test_Solve_error
#define MVM_Z_factorized d_MVM_Z_factorized
#define MVM_Z_forward d_MVM_Z_forward
#define HODLR_structuring d_HODLR_structuring
#define BPlus_structuring d_BPlus_structuring
#define delete_blocks d_delete_blocks
#define delete_Bplus d_delete_Bplus
#define copy_butterfly d_copy_butterfly
#define copy_delete_butterfly d_copy_delete_butterfly
#define ComputeMemory_butterfly d_ComputeMemory_butterfly
#define copy_Bplus d_copy_Bplus
#define copy_delete_Bplus d_copy_delete_Bplus
#define ComputeMemory_Bplus d_ComputeMemory_Bplus
#define copy_HOBF d_copy_HOBF
#define print_butterfly_size_rank d_print_butterfly_size_rank
#define Extract_partial_butterfly d_Extract_partial_butterfly
#define Copy_butterfly_partial d_Copy_butterfly_partial
#define Butterfly_Partial_MVP_Half d_Butterfly_Partial_MVP_Half
#define BF_block_MVP_dat d_BF_block_MVP_dat
#define Bplus_block_MVP_dat d_Bplus_block_MVP_dat
#define ComputeRandVectIndexArray d_ComputeRandVectIndexArray
#define CountMaxIntermidiateVector d_CountMaxIntermidiateVector
#define CountIndexArrayShape d_CountIndexArrayShape
#define Butterfly_value d_Butterfly_value
#define fullmat_block_MVP_dat d_fullmat_block_MVP_dat
#define get_butterfly_minmaxrank d_get_butterfly_minmaxrank
#define Butterfly_sym2asym d_Butterfly_sym2asym
#define Butterfly_MoveSingulartoLeft d_Butterfly_MoveSingulartoLeft
#define Butterfly_MoveSingulartoRight d_Butterfly_MoveSingulartoRight
#define InitStat d_InitStat
#define PrintStat d_PrintStat
#define SetDefaultOptions d_SetDefaultOptions
#define ComputeParallelIndices d_ComputeParallelIndices
#define DoubleDistributeBplus d_DoubleDistributeBplus
#define element_Zmn_user_C d_element_Zmn_user_C
#define C_HODLR_Createptree d_C_HODLR_Createptree
#define C_HODLR_Createstats d_C_HODLR_Createstats
#define C_HODLR_Printstats d_C_HODLR_Printstats
#define C_HODLR_Createoption d_C_HODLR_Createoption
#define C_HODLR_Setoption d_C_HODLR_Setoption
#define C_HODLR_Construct d_C_HODLR_Construct
#define C_HODLR_Factor d_C_HODLR_Factor
#define C_HODLR_Solve d_C_HODLR_Solve
#define C_HODLR_Mult d_C_HODLR_Mult
#define linspaceI d_linspaceI
#define gemm_omp d_gemm_omp
#define gemmHN_omp d_gemmHN_omp
#define gemmNH_omp d_gemmNH_omp
#define gemmTN_omp d_gemmTN_omp
#define gemmNT_omp d_gemmNT_omp
#define copymatN d_copymatN
#define copymatT d_copymatT
#define LR_ReCompression d_LR_ReCompression
#define LR_Fnorm d_LR_Fnorm
#define GetRank d_GetRank
#define ComputeRange d_ComputeRange
#define CheckRandomizedLR d_CheckRandomizedLR
#define rperm d_rperm
#define init_random_seed d_init_random_seed
#define random_dp_number d_random_dp_number
#define assert d_assert
#define cscalar d_cscalar
#define scalar d_scalar
#define curl d_curl
#define ccurl d_ccurl
#define LeastSquare d_LeastSquare
#define GeneralInverse d_GeneralInverse
#define RandomizedSVD d_RandomizedSVD
#define RandomMat d_RandomMat
#define ACA_SubsetSelection d_ACA_SubsetSelection
#define ACA_CompressionFull d_ACA_CompressionFull
#define SVD_Truncate d_SVD_Truncate
#define PIKSRT_DBLE_Multi d_PIKSRT_DBLE_Multi
#define Cart2Sph d_Cart2Sph
#define CreateLeaf_Natural d_CreateLeaf_Natural
#define NumberingPtree d_NumberingPtree
#define CreatePtree d_CreatePtree
#define CreateNewGrid d_CreateNewGrid
#define Redistribute1Dto1D d_Redistribute1Dto1D
#define g2l d_g2l
#define l2g d_l2g
#define rank_approximate_func d_rank_approximate_func
#define fnorm d_fnorm
#define dlangef90 d_dlangef90
#define zlangef90 d_zlangef90
#define flops_zgesdd d_flops_zgesdd
#define flops_dgesdd d_flops_dgesdd
#define flops_zgesvd d_flops_zgesvd
#define flops_dgesvd d_flops_dgesvd
#define flops_dgeqpfmod d_flops_dgeqpfmod
#define flops_zgeqpfmod d_flops_zgeqpfmod
#define fmuls_geqrf d_fmuls_geqrf
#define fadds_geqrf d_fadds_geqrf
#define flops_zgeqrf d_flops_zgeqrf
#define flops_dgeqrf d_flops_dgeqrf
#define fmuls_ungqr d_fmuls_ungqr
#define fadds_ungqr d_fadds_ungqr
#define flops_zungqr d_flops_zungqr
#define flops_dungqr d_flops_dungqr
#define fmuls_unmqr d_fmuls_unmqr
#define fadds_unmqr d_fadds_unmqr
#define flops_zunmqr d_flops_zunmqr
#define flops_dunmqr d_flops_dunmqr
#define fmuls_getrf d_fmuls_getrf
#define fadds_getrf d_fadds_getrf
#define flops_zgetrf d_flops_zgetrf
#define flops_dgetrf d_flops_dgetrf
#define fmuls_getrs d_fmuls_getrs
#define fadds_getrs d_fadds_getrs
#define flops_zgetrs d_flops_zgetrs
#define flops_dgetrs d_flops_dgetrs
#define fmuls_getri d_fmuls_getri
#define fadds_getri d_fadds_getri
#define flops_zgetri d_flops_zgetri
#define flops_dgetri d_flops_dgetri
#define fmuls_trsm d_fmuls_trsm
#define fadds_trsm d_fadds_trsm
#define flops_ztrsm d_flops_ztrsm
#define flops_dtrsm d_flops_dtrsm
#define fmuls_gemm d_fmuls_gemm
#define fadds_gemm d_fadds_gemm
#define flops_zgemm d_flops_zgemm
#define flops_dgemm d_flops_dgemm
#define group_dist d_group_dist
#define near_or_far d_near_or_far
#define func_distance d_func_distance
#define CheckNAN_butterfly d_CheckNAN_butterfly
#define CheckNAN_Bplus d_CheckNAN_Bplus
#define fnorm d_fnorm
#define lcg d_lcg
#define c8_normal_01 d_c8_normal_01
#define r8_normal_01 d_r8_normal_01
#define r8_uniform_01 d_r8_uniform_01
#define floor_safe d_floor_safe
#define ceiling_safe d_ceiling_safe
#define INT_safe d_INT_safe
#define norm_vector d_norm_vector
#define Hankel02_Func d_Hankel02_Func
#define BesselJ0_func d_BesselJ0_func
#define BesselY0_func d_BesselY0_func
#define GetTreelevel d_GetTreelevel
#define IOwnPgrp d_IOwnPgrp
#define lcm d_lcm
#define gcd d_gcd
#define grid d_grid
#define procgroup d_procgroup
#define proctree d_proctree
#define commquant1D d_commquant1D
#define basisgroup d_basisgroup
#define vectorsblock d_vectorsblock
#define vectorset d_vectorset
#define butterflymatrix d_butterflymatrix
#define butterfly_col_select d_butterfly_col_select
#define butterfly_Kerl d_butterfly_Kerl
#define butterfly_UV d_butterfly_UV
#define matrixblock d_matrixblock
#define onelplus d_onelplus
#define blockplus d_blockplus
#define schulz_operand d_schulz_operand
#define cascadingfactors d_cascadingfactors
#define hobf d_hobf
#define partitionedblocks d_partitionedblocks
#define RandomBlock d_RandomBlock
#define Hoption d_Hoption
#define Hstat d_Hstat
#define mesh d_mesh
#define kernelquant d_kernelquant
#define Bplus_compress d_Bplus_compress
#define Bplus_inversion d_Bplus_inversion
#define Bplus_randomized d_Bplus_randomized
#define Bplus_update d_Bplus_update
#define DenseLA d_DenseLA
#define HODLR_constr d_HODLR_constr
#define HODLR_DEFS d_HODLR_DEFS
#define HODLR_factor d_HODLR_factor
#define HODLR_randomMVP d_HODLR_randomMVP
#define HODLR_Solve_Mul d_HODLR_Solve_Mul
#define HODLR_structure d_HODLR_structure
#define HODLR_Utilities d_HODLR_Utilities
#define HODLR_wrapper d_HODLR_wrapper
#define misc d_misc
#endif
#endif
